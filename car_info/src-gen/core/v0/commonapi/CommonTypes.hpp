/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.core 3.2.0.v202012010850.
* Used org.franca.core 0.13.1.201807231814.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#ifndef V0_COMMONAPI_Common_Types_HPP_
#define V0_COMMONAPI_Common_Types_HPP_



#if !defined (COMMONAPI_INTERNAL_COMPILATION)
#define COMMONAPI_INTERNAL_COMPILATION
#define HAS_DEFINED_COMMONAPI_INTERNAL_COMPILATION_HERE
#endif

#include <CommonAPI/Deployment.hpp>
#include <CommonAPI/InputStream.hpp>
#include <CommonAPI/OutputStream.hpp>
#include <CommonAPI/Struct.hpp>
#include <CommonAPI/Types.hpp>
#include <cstdint>

#if defined (HAS_DEFINED_COMMONAPI_INTERNAL_COMPILATION_HERE)
#undef COMMONAPI_INTERNAL_COMPILATION
#undef HAS_DEFINED_COMMONAPI_INTERNAL_COMPILATION_HERE
#endif

namespace v0 {
namespace commonapi {

struct CommonTypes {
    struct batteryStruct : CommonAPI::Struct< float, float, float, float> {
    
        batteryStruct()
        {
            std::get< 0>(values_) = 0.0f;
            std::get< 1>(values_) = 0.0f;
            std::get< 2>(values_) = 0.0f;
            std::get< 3>(values_) = 0.0f;
        }
        batteryStruct(const float &_level, const float &_consumption, const float &_current, const float &_voltage)
        {
            std::get< 0>(values_) = _level;
            std::get< 1>(values_) = _consumption;
            std::get< 2>(values_) = _current;
            std::get< 3>(values_) = _voltage;
        }
        inline const float &getLevel() const { return std::get< 0>(values_); }
        inline void setLevel(const float &_value) { std::get< 0>(values_) = _value; }
        inline const float &getConsumption() const { return std::get< 1>(values_); }
        inline void setConsumption(const float &_value) { std::get< 1>(values_) = _value; }
        inline const float &getCurrent() const { return std::get< 2>(values_); }
        inline void setCurrent(const float &_value) { std::get< 2>(values_) = _value; }
        inline const float &getVoltage() const { return std::get< 3>(values_); }
        inline void setVoltage(const float &_value) { std::get< 3>(values_) = _value; }
        inline bool operator==(const batteryStruct& _other) const {
        return (getLevel() == _other.getLevel() && getConsumption() == _other.getConsumption() && getCurrent() == _other.getCurrent() && getVoltage() == _other.getVoltage());
        }
        inline bool operator!=(const batteryStruct &_other) const {
            return !((*this) == _other);
        }
    
    };


static inline const char* getTypeCollectionName() {
    static const char* typeCollectionName = "commonapi.CommonTypes";
    return typeCollectionName;
}

inline CommonAPI::Version getTypeCollectionVersion() {
    return CommonAPI::Version(0, 1);
}

}; // struct CommonTypes

} // namespace commonapi
} // namespace v0

namespace CommonAPI {
}


namespace std {
}


// Compatibility
namespace v0_1 = v0;

#endif // V0_COMMONAPI_Common_Types_HPP_
